<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>THE WINNER - Email Login & Games</title>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      max-width: 480px; 
      margin: auto; 
      padding: 20px; 
    }
    input, button { 
      padding: 10px; 
      margin: 5px 0; 
      width: 100%; 
      box-sizing: border-box; 
    }
    button { 
      cursor: pointer; 
    }
    #userSection, #wheelSection { 
      display: none; 
      margin-top: 20px; 
    }
    #wheelImage { 
      width: 200px; 
      transition: transform 4s ease-out; 
      display: block; 
      margin: auto; 
    }
    #leaderboardList li, #referralBonusHistory li { 
      margin-bottom: 6px; 
    }
    .section-header { 
      margin-top: 30px; 
    }
  </style>

  <!-- Firebase -->
  <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js"></script>
</head>
<body>
  <h2>THE WINNER - Email Login</h2>
  <div id="authSection">
    <input type="email" id="email" placeholder="Email" />
    <input type="password" id="password" placeholder="Password (min 6 chars)" />
    <input type="text" id="referralCode" placeholder="Referral Code (Optional)" />
    <button onclick="signUp()">Sign Up</button>
    <button onclick="login()">Login</button>
  </div>

  <div id="userSection">
    <p><strong>Balance:</strong> ₹<span id="balance">0</span></p>
    <p id="rewardStatus"></p>
    <p>Your Referral Code: <strong><span id="myReferralCode"></span></strong></p>
    <button onclick="logout()">Logout</button>

    <div class="section-header">
      <h3>Daily ₹5 Login Reward</h3>
      <button id="dailyRewardBtn" onclick="claimDailyReward()">Claim ₹5 Reward</button>
      <p id="dailyRewardMsg"></p>
    </div>

    <div class="section-header" id="wheelSection">
      <h3>Spin the Wheel (Once per day)</h3>
      <div style="position: relative; width: 200px; margin: auto;">
        <img id="wheelImage" src="https://i.postimg.cc/LXHsbRMK/wheel.png" alt="Spin Wheel" />
        <img src="https://i.postimg.cc/sXj1JFw6/arrow.png" alt="Arrow" style="width: 40px; position: absolute; top: -10px; left: 80px;" />
      </div>
      <button id="spinBtn" onclick="spinWheel()">SPIN NOW</button>
      <p id="spinResult"></p>
    </div>

    <div class="section-header">
      <h3>Withdraw ₹110 Minimum</h3>
      <input type="text" id="upi" placeholder="Enter your UPI ID" />
      <button onclick="requestWithdraw()">Request Withdraw</button>
      <p id="withdrawalMsg" style="color: green;"></p>
    </div>

    <div class="section-header">
      <h4>Referral Bonus History</h4>
      <ul id="referralBonusHistory"><li>No referral bonuses earned yet.</li></ul>
    </div>

    <div class="section-header">
      <h4>Leaderboard - Top Players</h4>
      <ol id="leaderboardList"><li>Loading...</li></ol>
    </div>
  </div>

  <audio id="spinSound" src="https://www.soundjay.com/misc/sounds/clock-ticking-1.mp3"></audio>

  <script>
    const firebaseConfig = {
      apiKey: "AIzaSyDlhpoHPffa1pBQ0z8L7eyDTfWdMvtQeKQ",
      authDomain: "the-winner-a25c3.firebaseapp.com",
      databaseURL: "https://the-winner-a25c3-default-rtdb.firebaseio.com/",
      projectId: "the-winner-a25c3",
      storageBucket: "the-winner-a25c3.appspot.com",
      messagingSenderId: "365924271664",
      appId: "1:365924271664:web:b856749b065c427f670ff5"
    };

    firebase.initializeApp(firebaseConfig);
    const auth = firebase.auth();
    const db = firebase.database();

    auth.onAuthStateChanged(user => {
      if (user) {
        document.getElementById('authSection').style.display = 'none';
        document.getElementById('userSection').style.display = 'block';
        initUser();
      } else {
        document.getElementById('authSection').style.display = 'block';
        document.getElementById('userSection').style.display = 'none';
      }
    });

    function isValidEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(email);
    }

    function signUp() {
      const email = document.getElementById('email').value.trim();
      const password = document.getElementById('password').value;
      const referralCode = document.getElementById('referralCode').value.trim();

      if (!isValidEmail(email)) {
        alert("Please enter a valid email address.");
        return;
      }
      if (password.length < 6) {
        alert("Password must be at least 6 characters.");
        return;
      }

      auth.createUserWithEmailAndPassword(email, password)
        .then(userCredential => {
          const userId = userCredential.user.uid;
          const userRef = db.ref('users/' + userId);
          const baseData = {
            balance: referralCode ? 20 : 0,
            lastLoginReward: "",
            lastSpinDate: "",
            referrals: [],
            referredBy: referralCode || "",
            referralBonuses: {}
          };
          userRef.set(baseData).then(() => {
            if (referralCode) {
              const refRef = db.ref('users/' + referralCode);
              refRef.once('value').then(snapshot => {
                if (snapshot.exists()) {
                  const refData = snapshot.val();
                  const newBalance = (refData.balance || 0) + 50;
                  const updatedReferrals = refData.referrals || [];
                  updatedReferrals.push(userId);
                  const newBonusRecordKey = db.ref().push().key;
                  const updates = {
                    balance: newBalance,
                    referrals: updatedReferrals
                  };
                  updates['referralBonuses/' + newBonusRecordKey] = {
                    fromUser: userId,
                    amount: 50,
                    timestamp: Date.now()
                  };
                  refRef.update(updates);
                }
              });
            }
            initUser();
          });
        })
        .catch(e => alert(e.message));
    }

    function login() {
      const email = document.getElementById('email').value.trim();
      const password = document.getElementById('password').value;

      auth.signInWithEmailAndPassword(email, password)
        .catch(e => alert(e.message));
    }

    function logout() {
      auth.signOut();
    }

    function initUser() {
      const user = auth.currentUser;
      if (!user) return;

      const userRef = db.ref('users/' + user.uid);
      userRef.once('value').then(snapshot => {
        const data = snapshot.val();
        document.getElementById('balance').innerText = data.balance || 0;
        document.getElementById('myReferralCode').innerText = user.uid;

        updateReferralBonusHistory(data.referralBonuses);
        loadLeaderboard();

        document.getElementById('dailyRewardMsg').innerText = "";
        document.getElementById('spinResult').innerText = "";

        // Show wheel section
        document.getElementById('wheelSection').style.display = 'block';
      });
    }

    function updateReferralBonusHistory(bonuses) {
      const list = document.getElementById('referralBonusHistory');
      list.innerHTML = "";

      if (!bonuses || Object.keys(bonuses).length === 0) {
        list.innerHTML = "<li>No referral bonuses earned yet.</li>";
        return;
      }

      Object.values(bonuses).forEach(bonus => {
        const li = document.createElement('li');
        const date = new Date(bonus.timestamp);
        li.textContent = `₹${bonus.amount} from User ${bonus.fromUser} on ${date.toLocaleDateString()}`;
        list.appendChild(li);
      });
    }

    function loadLeaderboard() {
      const leaderboardList = document.getElementById('leaderboardList');
      leaderboardList.innerHTML = "<li>Loading...</li>";

      db.ref('users').orderByChild('balance').limitToLast(10).once('value')
        .then(snapshot => {
          const users = [];
          snapshot.forEach(child => {
            users.push({ uid: child.key, balance: child.val().balance || 0 });
          });
          users.sort((a, b) => b.balance - a.balance);

          leaderboardList.innerHTML = "";
          users.forEach(user => {
            const li = document.createElement('li');
            li.textContent = `User: ${user.uid} - ₹${user.balance}`;
            leaderboardList.appendChild(li);
          });
        });
    }

    function claimDailyReward() {
      const user = auth.currentUser;
      if (!user) return alert("User not logged in.");

      const userRef = db.ref('users/' + user.uid);
      userRef.once('value').then(snapshot => {
        const data = snapshot.val();
        const today = new Date().toDateString();

        if (data.lastLoginReward === today) {
          document.getElementById('dailyRewardMsg').innerText = "You have already claimed today's reward.";
          return;
        }

        const newBalance = (data.balance || 0) + 5;
        userRef.update({
          balance: newBalance,
          lastLoginReward: today
        }).then(() => {
          document.getElementById('balance').innerText = newBalance;
          document.getElementById('dailyRewardMsg').innerText = "₹5 reward claimed successfully!";
        });
      });
    }

    function spinWheel() {
      const user = auth.currentUser;
      if (!user) return alert("User not logged in.");

      const userRef = db.ref('users/' + user.uid);
      userRef.once('value').then(snapshot => {
        const data = snapshot.val();
        const today = new Date().toDateString();

        if (data.lastSpinDate === today) {
          document.getElementById('spinResult').innerText = "You have already spun the wheel today.";
          return;
        }

        const wheelImage = document.getElementById('wheelImage');
        const spinSound = document.getElementById('spinSound');
        spinSound.play();

        const prizes = [10, 20, 50, 100, 0, 5, 15, 30];
        const prizeIndex = Math.floor(Math.random() * prizes.length);
        const prizeAmount = prizes[prizeIndex];
        const degreesPerSegment = 360 / prizes.length;
        const rotateDegrees = 3600 + (prizes.length - prizeIndex) * degreesPerSegment; // multiple spins + final stop

        wheelImage.style.transform = `rotate(${rotateDegrees}deg)`;

        setTimeout(() => {
          const newBalance = (data.balance || 0) + prizeAmount;
          userRef.update({
            balance: newBalance,
            lastSpinDate: today
          }).then(() => {
            document.getElementById('balance').innerText = newBalance;
            document.getElementById('spinResult').innerText = `You won ₹${prizeAmount}!`;
          });
        }, 4000); // animation duration
      });
    }

    function requestWithdraw() {
      const user = auth.currentUser;
      if (!user) return alert("User not logged in.");

      const upi = document.getElementById('upi').value.trim();
      if (!upi) {
        alert("Please enter your UPI ID.");
        return;
      }

      const userRef = db.ref('users/' + user.uid);
      userRef.once('value').then(snapshot => {
        const data = snapshot.val();
        if ((data.balance || 0) < 110) {
          alert("You need at least ₹110 to withdraw.");
          return;
        }

        const newBalance = data.balance - 110;
        userRef.update({ balance: newBalance }).then(() => {
          document.getElementById('balance').innerText = newBalance;
          document.getElementById('withdrawalMsg').innerText = "Withdrawal request received. UPI: " + upi;
          document.getElementById('upi').value = "";
        });
      });
    }
  </script>
</body>
</html>